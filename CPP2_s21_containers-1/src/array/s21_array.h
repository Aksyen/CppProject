#ifndef ARRAY_H
#define ARRAY_H

#include <initializer_list>
#include <iostream>

namespace s21 {
template <class T, size_t S>
class array {
 public:
  // определяет тип элемента (T — параметр шаблона)
  using value_type = T;
  // определяет тип ссылки на элемент
  using reference = T &;
  // определяет тип константной ссылки
  using const_reference = const T &;
  // определяет тип для итерации по контейнеру
  using iterator = T *;
  //  определяет тип константы для итерации по контейнеру
  using const_iterator = const T *;
  //  определяет тип размера контейнера, стандартный тип — size_t
  using size_type = size_t;

  ///////////////////////////////////////////////////////////////////////////////

  //	конструктор по умолчанию, создает пустой вектор
  array();
  //  Конструктор списка инициализаторов, создает вектор, инициализированный с
  //  помощью std::initializer_list
  array(std::initializer_list<value_type> const &items);
  //	конструктор копий
  array(const array &a);
  //	конструктор перемещения
  array(array &&a);
  //	деструктор
  ~array();
  //  Перегрузка оператора присваивания для перемещения объекта
  array<T, S> &operator=(array<T, S> &&a);

  ///////////////////////////////////////////////////////////////////////////////

  //	доступ к указанному элементу с проверкой границ
  reference at(size_type pos);
  //	доступ к указанному элементу
  reference operator[](size_type pos);
  //	доступ к первому элементу
  const_reference front();
  //	доступ к последнему элементу
  const_reference back();
  //	прямой доступ к базовому массиву
  iterator data();

  //////////////////////////////////////////////////////////////////////////////

  //	возвращает итератор на начало
  iterator begin();
  //	возвращает итератор на конец
  iterator end();

  //////////////////////////////////////////////////////////////////////////////

  //	проверяет, пуст ли контейнер
  bool empty();
  //	возвращает количество элементов
  size_type size();
  //	возвращает максимально возможное количество элементов
  size_type max_size();

  ////////////////////////////////////////////////////////////////////////////////

  //  меняет местами содержимое
  void swap(array &other);
  //  присваивает заданное значение value всем элементам в контейнере
  void fill(const_reference value);

  ////////////////////////////////////////////////////////////////////////////////

 private:
  value_type *arr_;
};
};  // namespace s21

#include "s21_array.tpp"

#endif
